spring.application.name=HACCP MES 1.0
spring.profiles.active=sienmes
# prod ? ??, local ????

# sienmes
#server.port=8035

server.address=localhost

# sienmes
#server.servlet.session.cookie.name=sienmes_jsessionid


server.max-http-header-size=30000

# 자동 로그아웃 시간 (60초, 기본은 1800(30분))
server.servlet.session.timeout=36000

server.servlet.context-path=/
spring.mvc.servlet.path=/
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.html



#spring.devtools.livereload.enabled=true
spring.web.locale=ko
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB


server.error.include-exception=true
server.error.include-stacktrace=ALWAYS
server.error.whitelabel.enabled=true


spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.servlet.content-type=text/html

spring.thymeleaf.cache=false
#spring.thymeleaf.check-template-location=true

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.devtools.restart.enabled=false


#create: 기존테이블 삭제 후 다시 생성 (DROP + CREATE)
#create-drop: create와 같으나 종료시점에 테이블 DROP
#update: 변경분만 반영(운영DB에서는 사용하면 안됨)
#validate: 엔티티와 테이블이 정상 매핑되었는지만 확인
#none: 사용하지 않음(사실상 없는 값이지만 관례상 none이라고 한다.)
spring.jpa.hibernate.ddl-auto=none

spring.data.jpa.repositories.enabled=true
spring.data.jdbc.repositories.enabled=false

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false
spring.jpa.open-in-view=false

spring.jpa.properties.hibernate.format_sql=true #콘솔에 SQL을 보기 좋게 띄울 것인지
spring.jpa.properties.hibernate.show-sql=true #콘솔에 SQL을 띄울 것인지
spring.jpa.properties.hibernate.use_sql_comments=false
#logging.level.org.hibernate=debug
logging.level.org.hibernate=info
#spring.jpa.properties.hibernate.highlight_sql=true
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace

#spring.session.jdbc.initialize-schema=always
spring.session.store-type=jdbc

# application.properties
#mybatis.type-aliases-package=mes.domain.model
#mybatis.type-handlers-package=mes.domain.typehandler
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30


logging.level.root=info
logging.level.mes.app.PopBill=INFO
site=mes21
mqtt_host=10.10.10.231
mqtt_web_port=9001
hmi_topic=${site}_hmi_data

# 각종 양식파일 위치
mes_form_path=c:\\temp\\mes21\\mes_form\\

# 업로드한 파일의 영구저장 장소
file_upload_path=c:\\temp\\mes21\\

# 파일업로드파일 임시저장위치
file_temp_upload_path=c:\\temp\\mes21\\upload_temp\\

# Hmi background path
hmi_background_image_path=c:\\temp\\mes21\\hmi\\background\\

# Hmi image path
hmi_node_image_path =c:\\temp\\mes21\\hmi\\node\\

# 교육참석자 sign
edu_sign=c:\\temp\\mes21\\edu\\sign\\

weather.api.endpoint=https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0

api.key=ZoyXbEkXMf1%2BvmjVOx7694aR%2Bj4J1jAaVAXI5%2BqIo3UbEWpx8ztE3iJ07oICtuZkh%2Fs6hsjfTG6NWsm98fUxhg%3D%3D

invoice.api.key=K7xHNeWiuFdFPZ9l4QJeq7QPKK1MsOujrFcXOAi%2BeG%2BWhdYtxNEtOuLOBq%2B2iHX0NKly9IPbeKSDbNYzhK%2BD5A%3D%3D

#Geocoder APi
Geocoder.Key=105C2324-CB47-33C9-BF8F-CDEDB6686AF9

#mail
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=kimyouli0330@naver.com
spring.mail.password=G5WKQC5MUHHJ
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.default-encoding=UTF-8


#ACTAS : N1QIQbkIw0SdR7fMBnMGebK3M5L1LghIYxLUGn+pCCE= (?????)
#ONITSYSTEM : ONITSYSTEM : ef/n6IlFRMGFABqKCvKIyvuKmNAXEymTFUffbYd4KZM=
popbill.linkId=ACTAS
popbill.secretKey=N1QIQbkIw0SdR7fMBnMGebK3M5L1LghIYxLUGn+pCCE=
popbill.isTest=true
popbill.isIpRestrictOnOff=true

openai.api.key=${OPENAI_API_KEY}

